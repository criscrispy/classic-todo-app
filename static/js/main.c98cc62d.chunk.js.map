{"version":3,"sources":["hooks/useInputState.js","EditTodoForm.js","hooks/useToggleState.js","Todo.js","TodoList.js","TodoForm.js","hooks/useTodoState.js","TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["useInputState","initialVal","useState","value","setValue","e","target","EditTodoForm","id","editTodo","task","toggleIsEditingForm","handleValueChange","resetValue","onSubmit","preventDefault","style","margin","width","TextField","onChange","fullWidth","autoFocus","useToggle","state","setState","Todo","completed","removeTodo","toggleTodo","useToggleState","isEditing","toggleIsEditing","ListItem","height","Checkbox","tabIndex","checked","onClick","ListItemText","textDecorationLine","ListItemSecondaryAction","IconButton","aria-label","TodoList","todos","console","log","length","Paper","List","map","todo","i","Fragment","key","Divider","TodoForm","addTodo","padding","label","useTodoState","initialTodos","setTodos","newTodoText","uuidv4","todoID","updatedTodos","filter","newTask","TodoApp","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","minHeight","backgroundColor","elevation","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","md","lg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c98cc62d.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nconst useInputState = initialVal => {\r\n  const [value, setValue] = useState(initialVal);\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n  return [value, handleChange, reset];\r\n};\r\n\r\n\r\nexport default useInputState;","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\nimport useInputState from './hooks/useInputState'\r\n\r\n\r\nfunction EditTodoForm({ id, editTodo, task, toggleIsEditingForm }) {\r\n    const [value, handleValueChange, resetValue] = useInputState(task);\r\n\r\n    return (\r\n        <form\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n                editTodo(id, value);\r\n                toggleIsEditingForm();\r\n                resetValue();\r\n            }}\r\n            style={{ margin: \"1rem\", width: \"75%\" }}\r\n        >\r\n            <TextField\r\n                margin='normal'\r\n                value={value}\r\n                onChange={handleValueChange}\r\n                fullWidth\r\n                autoFocus\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditTodoForm\r\n","import { useState } from \"react\";\r\nfunction useToggle(initialVal) {\r\n    // call useState, \"reserve piece of state\"\r\n\r\n    const [state, setState] = useState(initialVal);\r\n    const toggle = () => {\r\n        setState(!state);\r\n    };\r\n    // return piece of state AND a function to toggle it\r\n    return [state, toggle];\r\n}\r\nexport default useToggle;\r\n","import React from 'react'\r\nimport EditTodoForm from './EditTodoForm'\r\nimport useToggleState from './hooks/useToggleState'\r\n\r\nimport {\r\n    ListItem,\r\n    ListItemText,\r\n    Checkbox,\r\n    IconButton,\r\n    ListItemSecondaryAction,\r\n} from '@material-ui/core'\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\n\r\n\r\nfunction Todo({ id, task, completed, removeTodo, toggleTodo, editTodo }) {\r\n\r\n    const [isEditing, toggleIsEditing] = useToggleState(false);\r\n\r\n    return (\r\n        <ListItem style={{ height: \"64px\" }}>\r\n            {isEditing ? (\r\n                /*  id and task is originally a parameters of \r\n                  Todo passed down to the editTodo func component */\r\n                <EditTodoForm editTodo={editTodo} id={id} task={task} toggleIsEditingForm={toggleIsEditing} />\r\n            ) : (\r\n                <>\r\n                    <Checkbox tabIndex={-1} checked={completed} onClick={() => toggleTodo(id)} />\r\n                    <ListItemText style={{ textDecorationLine: completed ? \"line-through\" : \"none\" }}>\r\n                        {task}\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton aria-label=\"Delete\" onClick={() => removeTodo(id)}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"Edit\" onClick={toggleIsEditing} >\r\n                            <EditIcon />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </>\r\n            )}\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport { Paper, List, Divider } from '@material-ui/core'\r\n\r\nimport Todo from \"./Todo\"\r\n\r\n\r\nfunction TodoList({ todos, removeTodo, toggleTodo, editTodo }) {\r\n    console.log(todos)\r\n    if (todos.length)\r\n        return (\r\n            <Paper\r\n                style={{ margin: \"1rem 0\", }}\r\n            >\r\n                <List>\r\n                    {todos.map((todo, i) =>\r\n                        // JSX fragment - helps to group things. It wont result in any extra markup.\r\n                        /* To add a key to a fragment, we have to use the long-hand version\r\n                        rather than <> </>, we have to use <React.Fragment> */\r\n                        <React.Fragment key={i}>\r\n                            {/* This is where the key is set (A 2/2), \r\n                            you can spread the assisgn them before passing them down */}\r\n                            <Todo\r\n                                {...todo}\r\n                                /* task={todo.task}\r\n                                id={todo.id}\r\n                                completed={todo.completed} */\r\n                                key={todo.id}\r\n                                completed={todo.completed}\r\n                                removeTodo={removeTodo}\r\n                                toggleTodo={toggleTodo}\r\n                                editTodo={editTodo}\r\n                            />\r\n                            {/* Showing the divider under \r\n                         all the todos apart from the last one,\r\n                         i - index of todos from map, \r\n                         */}\r\n                            {i < todos.length - 1 && <Divider />}\r\n                        </ React.Fragment >\r\n                    )}\r\n                </List>\r\n            </Paper>\r\n        )\r\n    return null;\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\r\nimport useInputState from './hooks/useInputState'\r\nimport { Paper, TextField } from '@material-ui/core';\r\n\r\n\r\nfunction TodoForm({ addTodo }) {\r\n    const [value, handleValueChange, resetValue] = useInputState('');\r\n\r\n\r\n    return (\r\n        <Paper style={{ margin: \"1rem 0\", padding: \"0 1rem\" }}>\r\n            <form onSubmit={e => {\r\n                e.preventDefault();\r\n                addTodo(value);\r\n                resetValue();\r\n            }}>\r\n                <TextField value={value} onChange={handleValueChange} margin='normal' label='Add new todo' fullWidth />\r\n            </form>\r\n        </Paper>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","// creating custom hook for the TodoApp.js \r\nimport { useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst useTodoState = initialTodos => {\r\n\r\n    const [todos, setTodos] = useState(initialTodos);\r\n\r\n    const addTodo = newTodoText => {\r\n        /* id is created and passed down as part of todos but key is only set in TodoList func component \r\n        when todos are mapped over ... (A 1/2)  */\r\n        setTodos([...todos, { id: uuidv4(), task: newTodoText, completed: false }])\r\n    };\r\n\r\n    const removeTodo = todoID => {\r\n        // filter out removed todo\r\n        const updatedTodos = todos.filter(todo =>\r\n            todo.id !== todoID)\r\n        // call setTodos on updated Todos array\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    const toggleTodo = todoID => {\r\n        const updatedTodos = todos.map(todo =>\r\n            todo.id === todoID ? { ...todo, completed: !todo.completed } : todo);\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    const editTodo = (todoID, newTask) => {\r\n        const updatedTodos = todos.map(todo =>\r\n            todo.id === todoID ? { ...todo, task: newTask } : todo);\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return { todos, addTodo, removeTodo, toggleTodo, editTodo }\r\n\r\n}\r\n\r\nexport default useTodoState;\r\n","import React, { useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useTodoState from \"./hooks/useTodoState.js\"\r\n\r\nfunction TodoApp() {\r\n    const initialTodos = JSON.parse(window.localStorage.getItem('todos') || '[]');\r\n\r\n    const { todos, addTodo, removeTodo, toggleTodo, editTodo } = useTodoState(initialTodos);\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos])\r\n\r\n    return (\r\n        <Paper\r\n            style={{\r\n                padding: 0,\r\n                margin: 0,\r\n                minHeight: '100vh',\r\n                backgroundColor: '#dddddd',\r\n            }}\r\n            elevation={0}\r\n        >\r\n\r\n            <AppBar color='primary' position='static' style={{ height: '64px' }}>\r\n                <Toolbar>\r\n                    <Typography color='inherit'>Todos with hooks</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Grid container justify=\"center\" style={{ marginTop: \"1rem\" }}>\r\n                <Grid item xs={11} md={8} lg={4}>\r\n                    <TodoForm addTodo={addTodo} />\r\n                    <TodoList\r\n                        todos={todos}\r\n                        removeTodo={removeTodo}\r\n                        toggleTodo={toggleTodo}\r\n                        editTodo={editTodo}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper >\r\n\r\n    )\r\n}\r\n\r\nexport default TodoApp\r\n","import './App.css';\n\nimport React from \"react\";\nimport TodoApp from \"./TodoApp\";\n\nfunction App() {\n  return (\n    /*     <div className=\"App\">\n          <TodoApp />\n        </div> */\n    <TodoApp />\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}